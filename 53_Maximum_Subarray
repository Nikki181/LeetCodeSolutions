/* Given an integer array nums, find the contiguous subarray (containing at least one number) which has the largest sum and return its sum. 

Input: nums = [-2,1,-3,4,-1,2,1,-5,4]
Output: 6
Explanation: [4,-1,2,1] has the largest sum = 6.
Example 2:

Input: nums = [1]
Output: 1
*/

public class Solution {
    public int MaxSubArray(int[] nums) {
        int anssum=nums[0];
        int total= new int();
       for(int i=0;i<nums.Length;i++)
       {
           total+=nums[i];
           if (nums[i] > total) 
                total = nums[i];
        
            if(total>anssum)
               anssum=total;
       }
        return anssum;
    }
}
