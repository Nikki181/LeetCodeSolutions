/*
Input: 
["9001 discuss.leetcode.com"]
Output: 
["9001 discuss.leetcode.com", "9001 leetcode.com", "9001 com"]
Explanation: 
We only have one website domain: "discuss.leetcode.com". As discussed above, the subdomain "leetcode.com" and "com" will also be visited. So they will all be visited 9001 times.

Example 2:
Input: 
["900 google.mail.com", "50 yahoo.com", "1 intel.mail.com", "5 wiki.org"]
Output: 
["901 mail.com","50 yahoo.com","900 google.mail.com","5 wiki.org","5 org","1 intel.mail.com","951 com"]
Explanation: 
We will visit "google.mail.com" 900 times, "yahoo.com" 50 times, "intel.mail.com" once and "wiki.org" 5 times. For the subdomains, we will visit "mail.com" 900 + 1 = 901 times, "com" 900 + 50 + 1 = 951 times, and "org" 5 times.

*/

public class Solution {
    public IList<string> SubdomainVisits(string[] cpdomains) {
        
        IList<string> ans=new List<string>();
        Dictionary<string,int> dict=new Dictionary<string,int>();
        
        for(int i=0;i<cpdomains.Count();i++){
           
            string[] extractspace=cpdomains[i].Split(' ');
            var count=Convert.ToInt32(extractspace[0]);
            var word=extractspace[1];
            string[] domain=word.Split('.');
            for(int j=0;j<domain.Count();j++)
            {
                    if(dict.ContainsKey(word)){
                        dict[word]= dict[word]+ count;
                    }
                    else {
                        dict.Add(word,count);
                    }
                if(j!=domain.Count()-1){
                    int index = word.IndexOf('.');
                    word=word.Substring(index+1);
                }
                else
                    break;
            }
        }
        foreach(KeyValuePair<string,int> item in dict)
        {
            ans.Add(item.Value + " " +item.Key);
        }
        return ans;
    }
}
