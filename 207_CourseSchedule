/*
There are a total of numCourses courses you have to take, labeled from 0 to numCourses-1.
Some courses may have prerequisites, for example to take course 0 you have to first take course 1, which is expressed as a pair: [0,1]
Given the total number of courses and a list of prerequisite pairs, is it possible for you to finish all courses?

Example 1:

Input: numCourses = 2, prerequisites = [[1,0]]
Output: true
*/


public class Solution {
    public bool CanFinish(int numCourses, int[][] prerequisites) {
       
        int[] course=new int[numCourses];
        for(int i=0;i<numCourses;i++){
            course[i]=0;
        }
        bool[] visited=new bool[prerequisites.Length];
        for(int i=0;i<prerequisites.Length;i++){
            var pre=prerequisites[i][1];
            course[pre]=course[pre]+1;
            visited[i]=false;
        }
        //Finding edge with no prerequisites node in course array
        bool flag=true;
        while(flag){
            flag=false;
            for(int i=0;i<prerequisites.Length;i++){
                var course1=prerequisites[i][0];
                var course2=prerequisites[i][1];
                if(visited[i]==false && course[course1]==0){//check in course array if pre is 0 or not
                    visited[i]=true;
                    course[course2]=course[course2]-1;
                    flag=true;
                }
            }
        }
        //check if all the nodes in courses with value 0
         for(int i=0;i<numCourses;i++){
            if(course[i]!=0)
                return false;
        }
        return true;
        
    }
}
/*
Time Complexity:
O(v+e)
Space Complexity:
O(v+e)
*/
