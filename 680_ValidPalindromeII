/*
Given a non-empty string s, you may delete at most one character. Judge whether you can make it a palindrome.

Example 1:
Input: "aba"
Output: True

Example 2:
Input: "abca"
Output: True
Explanation: You could delete the character 'c'.

*/
public class Solution {
    public bool ValidPalindrome(string s) {
        if(s=="" ||s.Length==0)
            return true;
        int i=0;
        int j=s.Length-1;
        bool mayfalse=false;
        //When mayfalse is true
        //then first increment i then j
        int previ=-1;
        int prevj=-1;
        while(i<j)
        {
            if(s[i]==s[j])
            {
                i++;
                j--;
            }
            else{
                if(mayfalse)
                    return false;
                
                if(previ==-1 && prevj==-1){
                    
                    previ=i;
                    prevj=j;
                    i++;
                }
                else
                {
                    //if s[i] and s[j] is differet then previously checked by incrementing i and now resting back to prev and 
                    //now checking by incrementing j- if it's also not palindrom then return false
                    i=previ;
                    j=prevj-1;
                    previ=-1;
                    prevj=-1;
                    mayfalse=true;
                    
                }
            }
        }
        return true;
    }
}
