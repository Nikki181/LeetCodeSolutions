/*
Given an unsorted integer array nums, find the smallest missing positive integer.
Follow up: Could you implement an algorithm that runs in O(n) time and uses constant extra space.?

Input: nums = [1,2,0]
Output: 3

Input: nums = [3,4,-1,1]
Output: 2

Input: nums = [100]
Output: 1
*/

public class Solution {
    public int FirstMissingPositive(int[] nums) {
        nums = nums.Distinct().ToArray();
        Array.Sort(nums);
        int count=0;
        for(int i=0;i<nums.Length;i++){
            if(nums[i]>0){
               count++;
                if(count==nums[i])
                    continue;
                else
                    return count;
            }
            
        }
        return count+1;
    }
}
