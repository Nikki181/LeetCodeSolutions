/*
Given a binary tree, you need to compute the length of the diameter of the tree. The diameter of a binary tree is the length of the longest path between any two nodes in a tree. This path may or may not pass through the root.

Example:
Given a binary tree
          1
         / \
        2   3
       / \     
      4   5    
Return 3, which is the length of the path [4,2,1,3] or [5,2,1,3].

*/
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public class Solution {
    public int longestpath=0;
    public int DiameterOfBinaryTree(TreeNode root) {         
        LongestPath(root);
        return longestpath;
    }
    
    public int LongestPath(TreeNode node){
        if(node==null)
            return 0;
        
        int leftheight=LongestPath(node.left);
        int rightheight=LongestPath(node.right);
        
        longestpath=Math.Max(leftheight + rightheight ,longestpath );
        return Math.Max(leftheight , rightheight ) +1;
    }
}
