/*In a town, there are N people labelled from 1 to N.  There is a rumor that one of these people is secretly the town judge.

If the town judge exists, then:

The town judge trusts nobody.
Everybody (except for the town judge) trusts the town judge.
There is exactly one person that satisfies properties 1 and 2.
You are given trust, an array of pairs trust[i] = [a, b] representing that the person labelled a trusts the person labelled b.

If the town judge exists and can be identified, return the label of the town judge.  Otherwise, return -1.

Constraints:

1 <= N <= 1000
0 <= trust.length <= 10^4
trust[i].length == 2
trust[i] are all different
trust[i][0] != trust[i][1]
1 <= trust[i][0], trust[i][1] <= N
*/
public class Solution {
    public int FindJudge(int N, int[][] trust) {
        if(trust.Length==0){
            if(N>1)
                return -1;
            else
                return N;
        }
        bool[,] matrix=new bool[N,N];
        for(int i=0;i<N;i++)
        {
            for(int j=0;j<N;j++){
                matrix[i,j]=false;
            }
        }
        for(int i=0;i<trust.Length;i++){
            int row=trust[i][0];
            int col=trust[i][1];
            matrix[row-1,col-1]=true;
        }
        //check for which row is empty if found,then check it's column
        int possiblejudge=-1;
        for(int i=0;i<N;i++){
            for(int j=0;j<N;j++){
                if(matrix[i,j]==true)
                    break;
                if(j==N-1)
                {
                    var check=checkcolumn(matrix,i,N);
                    if(check)
                    {
                        if(possiblejudge==-1)
                            possiblejudge=i;
                        else
                            return -1;
                    }
                }
            }
        }
        if(possiblejudge!=-1)
            return possiblejudge+1;
        else
            return possiblejudge;
    }
    public bool checkcolumn(bool[,] matrix,int j,int N){
        for(int i=0;i<N;i++){
            if(i==j || matrix[i,j]==true)
                continue;
            else
            {
                return false;
            }
        }
        return true;
    
    }
}
