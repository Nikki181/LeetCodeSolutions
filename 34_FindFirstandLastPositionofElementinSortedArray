/* Given an array of integers nums sorted in ascending order, find the starting and ending position of a given target value.
Your algorithm's runtime complexity must be in the order of O(log n).
If the target is not found in the array, return [-1, -1].

[1,4] , target 4 => [1,1] target=1 => [0,0]
nums = [5,7,7,8,8,10], target = 8 => [3,4]
nums = [5,7,7,8,8,10], target = 6 =>[-1,-1]
*/

public class Solution {
    public int[] SearchRange(int[] nums, int target) {
        int[] ans=new int[2];
        var start=-1;
        var end=-1;
        for(int i=0;i<nums.Length;i++)
        {
            if(nums[i]==target)
            {
                if(start==-1)
                    start=i;
                else 
                    end=i;
            }
        }
        //[1,4] , target 4 => [1,1] target=1 => [0,0]
        if(start>=0 && end<0)
        {
            ans[0]=start;
            ans[1]=start;
        }
        else
        {
            ans[0]=start;
            ans[1]=end;
        }
        return ans;
    }
}



