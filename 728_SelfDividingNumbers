/*
A self-dividing number is a number that is divisible by every digit it contains.
For example, 128 is a self-dividing number because 128 % 1 == 0, 128 % 2 == 0, and 128 % 8 == 0.
Also, a self-dividing number is not allowed to contain the digit zero.
Given a lower and upper number bound, output a list of every possible self dividing number, including the bounds if possible.

Input: 
left = 1, right = 22
Output: [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]

*/

public class Solution {
   public IList<int> SelfDividingNumbers(int left, int right) {
        IList<int> result = new List<int>();
        for(int i = left; i <= right; i++){
            if(IsSelfDividing(i)){
                result.Add(i);
            }
        }        
        return result;
    }    
    public bool IsSelfDividing(int n){
        int currentDigit = 0;
        int actualNumber = n;
        while(n > 0){
            currentDigit = n % 10;
            if((currentDigit == 0) || (actualNumber % currentDigit != 0)){
                return false;
            }
            n /= 10;
        }
        return true;
    }
}
