/*
Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases.
*/

public class Solution {
    public bool IsPalindrome(string s) {
        s=Remove_Special_Characters(s);
        s=s.ToLower();
        for (int i = 0; i < s.Length; i++)
            {
                if (i == (s.Length - (i + 1)))
                    return true;
                if (s[i] != s[s.Length - (i + 1)])
                    return false;
            }
            return true;
    }
     public static string Remove_Special_Characters(string str)
        {
            StringBuilder sb = new StringBuilder();
            foreach (char c in str)
            {
                if ((c >= '0' && c <= '9') || (c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z'))
                {
                    sb.Append(c);
                }
            }
            return sb.ToString();
        }
}
