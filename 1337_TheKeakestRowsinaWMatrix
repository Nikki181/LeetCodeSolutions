/*
Given a m * n matrix mat of ones (representing soldiers) and zeros (representing civilians), return the indexes of the k weakest rows in the matrix ordered from the weakest to the strongest.

Input: mat = 
[[1,1,0,0,0],
 [1,1,1,1,0],
 [1,0,0,0,0],
 [1,1,0,0,0],
 [1,1,1,1,1]], 
k = 3
Output: [2,0,3]
*/
 	
public class Solution {
    public int[] KWeakestRows(int[][] mat, int k) {
        int[] ans=new int[k];
        Dictionary<int,int> dict=new Dictionary<int,int>();
        int i=0;
        for(i=0;i<mat.GetLength(0);i++)
        {
            var count=mat[i].Count(x=>x == 1);
            dict[i]=count;
        }
        i=0;
        foreach (KeyValuePair<int,int> item in dict.OrderBy(x=> x.Value))
        {  
            if(i<k){
            ans[i]= item.Key;
            i++;
            }
            else
                break;
        }
        return ans;
    }
}
