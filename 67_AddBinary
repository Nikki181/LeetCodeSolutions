/*
Given two binary strings a and b, return their sum as a binary string.

Example 1:
Input: a = "11", b = "1"
Output: "100"

Example 2:
Input: a = "1010", b = "1011"
Output: "10101"

*/

public class Solution {
    public string AddBinary(string a, string b) {
 
        bool carry=false;
        string result="";
        int sum=0;
        int count=1;
        for(int first=a.Length-1, second=b.Length-1; first>=0 || second>=0;first--,second--)
        {
            sum=(first>=0? a[first]-'0' : 0) + 
                (second>=0? b[second]-'0' : 0)+ 
                (carry==true?1:0);
            if(sum==3){ //"1111" +"1111"
                carry=true;
                result+="1";
            }
            else if(sum==2) //"11"+"01"
            {
                carry=true;
                result+="0";
                
            }
            else
            {
                carry=false;
                result+=sum;
            }
          
        }
        char[] carray=result.ToCharArray();
        Array.Reverse(carray);
        if(carry==true)
        {
            
            return "1" + new string( carray );
        }
        return new string(carray);
    }
}
