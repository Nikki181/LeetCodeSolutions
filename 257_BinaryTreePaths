/*
Gen a binary tree, return all root-to-leaf paths.
Note: A leaf is a node with no children.

Input:

   1
 /   \
2     3
 \
  5

Output: ["1->2->5", "1->3"]

*/

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public class Solution {
    public IList<string> BinaryTreePaths(TreeNode root) {
        IList<string> result=new List<string>();
        string r="";
        BuildTree(root,r,result);
        return result;
    }
    public void BuildTree(TreeNode root,string r,IList<string> result){
    
        if(root==null)
            return;

        r+=root.val;
        if(root.left==null && root.right==null){
            result.Add(r);
        }
        else{
            r+="->";
            BuildTree(root.left,r,result);
            BuildTree(root.right,r,result);
        }
    }   
   
}
