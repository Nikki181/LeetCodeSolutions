/*
Given a binary tree, find the lowest common ancestor (LCA) of two given nodes in the tree.
Example 1:
Input: root = [3,5,1,6,2,0,8,null,null,7,4], p = 5, q = 1
Output: 3
Explanation: The LCA of nodes 5 and 1 is 3.
*/
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public TreeNode LowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
       
        TreeNode ans=null;
        DFS(root,p,q,ref ans);
        return ans;
    }
    public int DFS(TreeNode root, TreeNode p, TreeNode q,ref TreeNode ans){
         if(root==null)
            return 0;
        int nodefound=0;
        
        if(root.left==p || root.left==q)
            nodefound++;
        if(root.right==q || root.right==p) 
            nodefound++;
        nodefound += DFS(root.left,p,q,ref ans);
        nodefound += DFS(root.right,p,q,ref ans);
            
        if(nodefound==2 && ans==null){
            ans=root;
        }
        return nodefound;
    }
}
