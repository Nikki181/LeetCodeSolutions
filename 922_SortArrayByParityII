/*
Given an array A of non-negative integers, half of the integers in A are odd, and half of the integers are even.
Sort the array so that whenever A[i] is odd, i is odd; and whenever A[i] is even, i is even.
You may return any answer array that satisfies this condition.

Input: [4,2,5,7]
Output: [4,5,2,7]

Note:
2 <= A.length <= 20000
A.length % 2 == 0
0 <= A[i] <= 1000
*/

public class Solution {
    public int[] SortArrayByParityII(int[] A) {
        int[] ans=new int[A.Length];
        int[] odd=new int[A.Length/2];
        int[] even=new int[A.Length/2];
        int evencounter=0;
        int oddcounter=0;
        for(int i=0;i<A.Length;i++)
        {
            if(A[i]%2==0)
                even[evencounter++]=A[i];
            else
                odd[oddcounter++]=A[i];
        }
         evencounter=0;
         oddcounter=0;
        for(int i=0;i<A.Length;i++)
        {
            if(i%2==0)
                ans[i]=even[evencounter++];
            else
                ans[i]=odd[oddcounter++];
        }
        return ans;
    }
}
